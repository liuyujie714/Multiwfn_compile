name: Build latest Mutiwfn using MacOS-14-arm64

on:
  push:
    branches:
      - master

env:
  Multiwfn_version:  Multiwfn_3.8_dev_src_Linux
  
jobs:
  MacOS-Arm64:
    runs-on: macos-14
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Check system
      run: |
        echo "macOS version: $(sw_vers -productVersion)"
        echo "macOS kernel: $(uname -r)"
        echo "macOS arch: $(uname -m)"

    - name: Download source
      run: |
        # wget http://sobereva.com/multiwfn/misc/${{env.Multiwfn_version}}.zip
        # unzip ${{env.Multiwfn_version}}.zip
        # rm ${{env.Multiwfn_version}}.zip
        wget http://sobereva.com/multiwfn/misc/Multiwfn_3.8_dev_bin_Linux_noGUI.zip
        unzip -o -j Multiwfn_3.8_dev_bin_Linux_noGUI.zip Multiwfn_3.8_dev_bin_Linux_noGUI/{settings.ini,LICENSE.txt,examples/phenol.xyz}
        rm Multiwfn_3.8_dev_bin_Linux_noGUI.zip 
        ls
        
    - name: Build static flint
      run: |
        curl -L https://github.com/flintlib/flint/releases/download/v3.2.1/flint-3.2.1.tar.gz -o flint.tar.gz
        tar -xf flint.tar.gz 
        rm -rf flint.tar.gz  
        cd flint*
        ./configure \
        --enable-static \
        --with-gmp=$(brew --prefix) \
        --with-mpfr=$(brew --prefix) \
        --prefix="/opt/homebrew/opt/flint"
        make -j4
        sudo make install
        
        #rm -rf /opt/homebrew/opt/flint/lib/*.dylib
        ls /opt/homebrew/opt/flint/lib/
        ls /opt/homebrew/opt/mpfr/lib/
        ls /opt/homebrew/opt/gmp/lib
      env:
        FC: gfortran-13
        CC: gcc-13


    - name: Install libraries
      run: |
        wget https://www.dislin.de/downloads/macOS/dislin-11.5.macOS.arm.64.tar.gz
        tar -xf dislin-11.5.macOS.arm.64.tar.gz
        export DISLIN=$PWD/dislin
        cd dislin-11.5
        ./INSTALL
        cd ..
        ls $DISLIN/
        install_name_tool -id $DISLIN/libdislin_d.dylib $DISLIN/libdislin_d.dylib

    - name: Build Multiwfn
      run: |
        export DISLIN=$PWD/dislin
        cd ${{env.Multiwfn_version}}
        cp ../CMakeLists_macos_arm64.txt CMakeLists.txt
        mkdir build && cd build
        cmake .. \
        -DWITH_OpenMP=ON \
        -DWITH_GUI=ON \
        -DDISLIN_DIR=$DISLIN \
        -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_INSTALL_PREFIX=$PWD \
        -DCMAKE_PREFIX_PATH=/opt/homebrew/opt/flint \
        -DBUILD_SHARED_LIBS=ON
        make install -j4
        otool -L Multiwfn
      env:
        FC: gfortran-13
        CC: gcc-13    

    - name: Test Command
      run: |
        cp settings.ini ${{env.Multiwfn_version}}/build
        cp dislin/libdislin_d.dylib ${{env.Multiwfn_version}}/build
        ./${{env.Multiwfn_version}}/build/Multiwfn phenol.xyz <<< "q"      

    - name: Upload MacOS artifact
      uses: actions/upload-artifact@v4
      if: ${{ success() }}
      with:
        name: Multiwfn3.8_latest_MacOS
        path: |
          ./${{env.Multiwfn_version}}/build/Multiwfn
          ./${{env.Multiwfn_version}}/build/libdislin_d.dylib

    - name: Test GUI
      run: | 
        brew install --cask xquartz
        brew install ffmpeg cliclick
        sudo /opt/X11/libexec/privileged_startx || true

        cp ./${{env.Multiwfn_version}}/build/libdislin_d.dylib .
        cp ./${{env.Multiwfn_version}}/build/Multiwfn .
        chmod a+x ./${{env.Multiwfn_version}}/build/Multiwfn
        # fix path
        install_name_tool -change $PWD/dislin/libdislin_d.dylib @loader_path/libdislin_d.dylib Multiwfn

        ffmpeg -f avfoundation -framerate 30 -video_size 1920x1080 -i "0"  -t 60 -c:v libx264 output.mp4 &
        sleep 2
        {
          sudo ulimit -s unlimited
          export OMP_STACKSIZE=200M
          ./${{env.Multiwfn_version}}/build/Multiwfn misc/examples/phenylalanineresiduestrimer.xyz <<< "0" &
          sleep 2
          for i in `seq 800 10 2000`
          do 
            cliclick -w 1000 c:$i,140
            cliclick -w 1000 c:$i,170
          done
          #pkill -f "Multiwfn" 
        }
        sleep 30

    - name: Upload recording
      uses: actions/upload-artifact@v4
      with:
        name: gui-recording
        path: ./output.mp4
