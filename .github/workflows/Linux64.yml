name: Build Multiwfn Linux64

on:
  push:
    branches:
      - master
      
env:
  Multiwfn_version:  Multiwfn_3.8_dev_src_Linux
  
jobs:
  Linux-64:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Install Dislin libraries
      run: |
        wget https://www.dislin.de/downloads/linux/i586_64/dislin-11.5.linux.i586_64.tar.gz
        tar -xf dislin-11.5.linux.i586_64.tar.gz
        export DISLIN=$PWD/dislin
        cd dislin-11.5
        ./INSTALL
        cd ..
        ls $DISLIN/                  
        echo "PATH=$PATH:$DISLIN/bin" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$DISLIN:$LD_LIBRARY_PATH" >> $GITHUB_ENV 
        sudo apt install p7zip-full libxm4 libmotif-dev libgl1-mesa-dev libflint-dev libflint-arb-dev
    
    # - name: Build static flint
    #   run: |
    #     vcpkg install flint:x64-linux-release arb:x64-linux-release
    #     ls /usr/local/share/vcpkg/packages/flint_x64-linux-release/lib
    #     ls /usr/local/share/vcpkg/packages/gmp_x64-linux-release/lib
    #     ls /usr/local/share/vcpkg/packages/mpfr_x64-linux-release/lib
    #     ls /usr/local/share/vcpkg/packages/arb_x64-linux-release/lib
        
    - name: Install Intel oneAPI compiler
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update
        sudo apt-get install intel-oneapi-compiler-fortran-2021.4.0 intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic-2021.4.0 intel-oneapi-mkl-2021.4.0 intel-oneapi-mkl-devel-2021.4.0
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: Test ifort
      run: |
        ifort --version
        ls -al /opt/intel/oneapi/mkl/latest/lib/intel64

    - name: Download Multiwfn
      run: |
        rm -rf ${{env.Multiwfn_version}}
        curl -L http://sobereva.com/multiwfn/misc/${{env.Multiwfn_version}}.zip -o Multiwfn_src.zip
        7z x Multiwfn_src.zip

    - name: Compile Multiwfn
      run: |
        cd ${{env.Multiwfn_version}}
        # sed -i 's|INCLUDE = -I./ -I./ext|& -I/usr/local/share/vcpkg/packages/flint_x64-linux-release/include -I/usr/local/share/vcpkg/packages/mpfr_x64-linux-release/include -I/usr/local/share/vcpkg/packages/gmp_x64-linux-release/include -I/usr/local/share/vcpkg/packages/arb_x64-linux-release/include|' Makefile 
        # sed -i 's|^LIB_base =.*|&  /usr/local/share/vcpkg/packages/gmp_x64-linux-release/lib/libgmp.a  /usr/local/share/vcpkg/packages/mpfr_x64-linux-release/lib/libmpfr.a /usr/local/share/vcpkg/packages/arb_x64-linux-release/lib/libarb.a /usr/local/share/vcpkg/packages/flint_x64-linux-release/lib/libflint.a|' Makefile
        # sed -i 's/-lflint -lflint-arb/-lgmp -lmpfr -larb -lflint/g' Makefile
        # sed -i 's/\$(FC) \$(OPT) \$(objects)/ifort -qopenmp -qopenmp-link=static -threads -fpp -qmkl -static-intel -DINTEL_MKL -stand f08 $(objects)/g' Makefile

        # use staitc flint  -static-libgcc
        sed -i 's/-lflint -lflint-arb/-Wl,-Bstatic -lflint -Wl,-Bdynamic/g' Makefile
        sed -i 's/-mkl/-qmkl/g' Makefile
        cat Makefile
        make GUI WITH_FD=1 OS=Ubuntu -j4 

    - name: Check dependents
      run: |
        ldd ./${{env.Multiwfn_version}}/Multiwfn

    - name: Upload Multiwfn
      uses: actions/upload-artifact@v4
      if: ${{ success() }}
      with:
        name: Multiwfn_Linux64
        path: |
          ./${{env.Multiwfn_version}}/Multiwfn
