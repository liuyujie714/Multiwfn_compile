name: Build Multiwfn Linux64 with mouse rotate on Centos 8

on:
  push:
    branches:
      - master
      
env:
  Multiwfn_version:  Multiwfn_3.8_dev_src_Linux
  
jobs:
  Linux-64-Centos8:
    runs-on: ubuntu-22.04
    container:
      image: centos:8

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      

    - name: Install dependencies
      run: |
        sed -i s/mirror.centos.org/vault.centos.org/g /etc/yum.repos.d/*.repo
        sed -i s/^#.*baseurl=http/baseurl=http/g /etc/yum.repos.d/*.repo
        sed -i s/^mirrorlist=http/#mirrorlist=http/g /etc/yum.repos.d/*.repo
        sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
        sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
        yum install epel-release -y
        yum install p7zip  -y

    # - name: Build static mpfr and gmp
    #   run: |
    #     curl -L https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz -o gmp.tar.xz
    #     tar -xf gmp.tar.xz && rm -rf gmp.tar.xz
    #     cd gmp*
    #     ./configure --enable-static
    #     make -j4 && make install

    #     cd ..
    #     curl -L https://www.mpfr.org/mpfr-current/mpfr-4.2.2.tar.gz -o mpfr.tar.gz
    #     tar -xf mpfr.tar.gz && rm -rf mpfr.tar.gz
    #     cd mpfr*
    #     ./configure --enable-static
    #     make -j4 && make install

    # - name: Download Multiwfn and Modify
    #   run: |
    #     ls /usr/local/lib/libmpfr.a
    #     ls /usr/local/lib/libgmp.a
    #     ls /usr/local/include
    #     rm -rf ${{env.Multiwfn_version}}
    #     curl -L http://sobereva.com/multiwfn/misc/${{env.Multiwfn_version}}.zip -o Multiwfn_src.zip
    #     7za x Multiwfn_src.zip
    #     cp GUI_modify.f90 ${{env.Multiwfn_version}}/GUI.f90

    # - name: Build static flint
    #   run: |
    #     curl -L https://flintlib.org/download/flint-3.2.1.tar.gz -o flint.tar.gz
    #     tar -xf flint.tar.gz 
    #     rm -rf flint.tar.gz
    #     cd flint*
    #     ./configure --enable-static --prefix=${{github.workspace}}/flint
    #     make -j4
    #     make install

    #     ls ${{github.workspace}}/flint
    #     ls ${{github.workspace}}/flint/lib

    # - name: Install Intel oneAPI compiler
    #   run: |
    #     tee > /etc/yum.repos.d/oneAPI.repo << EOF
    #     [oneAPI]
    #     name=IntelÂ® oneAPI repository
    #     baseurl=https://yum.repos.intel.com/oneapi
    #     enabled=1
    #     gpgcheck=0
    #     repo_gpgcheck=1
    #     gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
    #     EOF

    #     yum install -y intel-oneapi-compiler-fortran-2021.4.0 \
    #                   intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic-2021.4.0 \
    #                   intel-oneapi-mkl-2021.4.0 \
    #                   intel-oneapi-mkl-devel-2021.4.0

    # - name: Test ifort
    #   run: |
    #     source /opt/intel/oneapi/setvars.sh
    #     ifort --version
    #     ls -al /opt/intel/oneapi/mkl/latest/lib/intel64

    # - name: Build fortran-xlib
    #   run: |
    #     source /opt/intel/oneapi/setvars.sh
    #     git clone https://github.com/interkosmos/fortran-xlib.git
    #     cd fortran-xlib
    #     ifort -O2 -fpscomp logicals -c src/xlib.f90
    #     ifort -O2 -fpscomp logicals -c src/xpm.f90
    #     ar rcs libfortran-xlib.a xlib.o xpm.o
    #     cp libfortran-xlib.a xlib.mod ../${{env.Multiwfn_version}}
    
    # - name: Compile Multiwfn
    #   run: |
    #     source /opt/intel/oneapi/setvars.sh
    #     cd ${{env.Multiwfn_version}}

    #     # use staitc flint 
    #     sed -i "s|INCLUDE = -I./ -I./ext|& -I${{github.workspace}}/flint/include /usr/local/include|" Makefile 
    #     sed -i "s|^LIB_base =.*|& ./libfortran-xlib.a ${{github.workspace}}/flint/lib/libflint.a /usr/local/lib/libmpfr.a /usr/local/lib/libgmp.a|" Makefile
        
    #     # fix ifort compiler C bind issue for Bool, add '-fpscomp logicals'
    #     sed -i 's/-mkl/-qmkl -fpscomp logicals /g' Makefile

    #     cat Makefile
    #     make GUI WITH_FD=1 -j4 

    # - name: Check dependents
    #   run: |
    #     ldd ./${{env.Multiwfn_version}}/Multiwfn

    - name: Pack Multiwfn
      run: |
        curl -O -L http://sobereva.com/multiwfn/misc/Multiwfn_3.8_dev_bin_Linux.zip
        7za x Multiwfn_3.8_dev_bin_Linux.zip
        cd Multiwfn_3.8_dev_bin_Linux && rm -rf Multiwfn
        ls -alt
        #cp ../${{env.Multiwfn_version}}/Multiwfn .

    - name: Upload Multiwfn
      uses: actions/upload-artifact@v4
      if: ${{ success() }}
      with:
        name: Multiwfn_Linux64
        path: |
          ./Multiwfn_3.8_dev_bin_Linux


# refer to https://github.com/endless-sky/endless-sky/blob/master/.github/workflows/cd.yaml
  Release:
    needs: [Linux-64-Centos8]
    runs-on: ubuntu-latest

    env:
        RELEASE_COMMAND: release
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: bleed

    steps:
      - uses: actions/checkout@v3

      - name: Install github-release
        run: |
          go install github.com/github-release/github-release@latest
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      
      - name: Set environment variables
        run: |
          echo "RELEASE_TAG=bleed" >> $GITHUB_ENV
          echo "TIME=$(date -u '+%Y.%m.%d')" >> $GITHUB_ENV
          echo "GITHUB_USER=$( echo ${{ github.repository }} | cut -d/ -f1 )" >> $GITHUB_ENV
          echo "GITHUB_REPO=$( echo ${{ github.repository }} | cut -d/ -f2 )" >> $GITHUB_ENV

      # - name: Move/Create continuous tag
      #   run: |
      #     git tag --force ${{ env.RELEASE_TAG }} ${{ github.sha }}
      #     git push --tags --force
      
      - name: Check continuous release status
        run: |
          if ! github-release info -t ${{ env.RELEASE_TAG }} > /dev/null 2>&1; then
            echo "RELEASE_COMMAND=release" >> $GITHUB_ENV
          else
            echo "RELEASE_COMMAND=edit" >> $GITHUB_ENV
          fi
      
      - name: Setup continuous release
        run: |
          DESCRIPTION="Triggered on $(date -u '+%Y/%m/%d, %H:%M') UTC by commit ${{ github.sha }} (@${{ github.actor }})
          This is an automated build of the latest source. It may be unstable or even crash, corrupt your save or eat your kitten. Use with caution!
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          github-release ${{env.RELEASE_COMMAND}} --tag ${{ env.RELEASE_TAG }} --name "Bleed Release" --description "$DESCRIPTION" --pre-release
      
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: Multiwfn_Linux64
          path: ./Multiwfn_3.8_dev_bin_Linux

      - name: Package Linux artifact to release
        run: |
          ls -alt
          # time stamp
          OUTPUT_TAR=$(echo ${{env.Multiwfn_version}} | cut -d '_' -f1,2,3)_Linux_x64_$(date -u '+%Y.%m.%d')".tar.gz"
          tar -czvf ${OUTPUT_TAR} -C Multiwfn_3.8_dev_bin_Linux .
          github-release upload --tag ${{ env.RELEASE_TAG }} --replace --name ${OUTPUT_TAR} --file ${OUTPUT_TAR}
